import numpy as np
from keras.models import Sequential
from keras.layers import Dense
from keras.utils import to_categorical
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split

data = load_iris()
X = data.data
y = data.target
# Convert y to one-hot encoded target variable
y = to_categorical(y)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=50)

model = Sequential()
model.add(Dense(32, input_dim=X_train.shape[1], activation='relu'))
model.add(Dense(16, activation='relu'))
model.add(Dense(y_train.shape[1], activation='softmax'))

# Compile the model
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

#Model Summary
model.summary()

# Train the model
model.fit(X_train, y_train, epochs=100, batch_size=32, validation_split=0.2)

# Evaluate the model on the test set
loss, accuracy = model.evaluate(X_test, y_test)
print('Test accuracy:', accuracy)

y_pred_class = np.argmax(model.predict(X_test),axis = -1)
y_pred = model.predict(X_test)
y_test_class = np.argmax(y_test,axis=1)
#Classification Report
from sklearn.metrics import classification_report
print(classification_report(y_test_class,y_pred_class))
#Make prediction on new data
new_data = [[4.9,6.6,3.2,2.7],[6.2,2.8,4.8,1.8],[7.3,2.9,6.3,1.8]]
new_data_predictions = model.predict(new_data)


